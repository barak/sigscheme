==============================================================================
Requirements and critical bugs:

* Confirm internal definition behavior as specification
  - Make all test in test-define.scm passed when SCM_STRICT_ARGCHECK

* Confirm R5RS and SRFI conformance for each function implementation

* Autoconfiscate the SigScheme package (don't rely on uim's configure)
  - Prepare replace functions (asprintf and so on)
  - Introduce C99-independent stdint.h
    http://autoconf-archive.cryp.to/ax_create_stdint_h.html
  - [uim] configure sigscheme subdir by top-level configure like GCC
  - Generate and pack sigschemefunctable*.[hc] into distribution file by make
    dist

* Fix all side-effective expression in macros
  - All files except for operations-srfi1.c, storage-compact.h and
    test-compact.c are checked
  - qquote_internal() still have such expression

* Review and refactor some functions in syntax.c(listran, vectran,
  qquote_internal, scm_s_quasiquote) (other files had already been done)

* Confirm behavior of constant vector and list
  - Investigate behavior of them in Scheme implementations other than Gauche
    and Guile, and record it into doc/spec.txt
  - Implement if needed

* Make 64bit-safe (after compaction and stdint.h)

* Confirm public API

* Write test for tail expression of all tail-recursive syntaxes

* Add tests for proper tail recursion with 'apply' and 'guard' to
  test-tail-rec.scm

* [uim] link libsscm into libuim statically

* Clear license, copyright and changes information
  - slib.scm
  - scm_length() in operations.c
  - "Shiro Kawai" part of read.c
  - test/*.scm

* Confirm appropriate workaround for the GCC's noinline attribute vanishing
  problem on Linux environments

* grep "FIXME" and fix them

==============================================================================
Low priority bugs:

* fileport_byte_readyp() does not support a FILE based on a pipe, or opened by
  fdopen(3)

==============================================================================
Extensions: (not required for now)

* Introduce dynamic environment for internal use
  - Fix continuation-unsafe current-{input,output}-port handling with it
  - Replace Scm_current_char_codec handling with it

* Dynamic encoding switching for a conversion between string and char list,
  based on a SRFI or de facto standard API
  - Evaluate ces API of Gauche
  - Consider dynamic environment

* Add GB18030 to encoding.c

* Add Big5 to encoding.c

* Complete operations-srfi1.c and make it production quality if considerable
  benefit exists against SLIB version of SRFI-1 implementation

==============================================================================
Performance improvements:

* Object representation compaction ([Anthy-dev 2353], [Anthy-dev 2360])
  - Make all tests passed without error or SEGV
  - Create immediate objects directly without calling scm_make_*()
  - Refine logical structure and namings

* (not required for now) Replace procedure registration functions with
  typecode-base single function with typecheck macro, to reduce footprint
  - Make private proc registration in SRFI-34 type-safe

* (not required for now) Support string of constant-width char
  - Define SigScheme's own internal multi-CCS code
  - Make UCS2 selectable as canonical internal code

==============================================================================
Logical simplifications:

* (not required for now) Reorganize encoding and char codec API

==============================================================================
Namings and Cosmetic things:

* Rename "Macro Declarations" of all C files, "Macro Definitions" and move to
  immediately after of "Local Include" section since other declarations and
  definitions sometimes need macros

* Consider renaming about typenames (e.g. ScmObj -> scm_obj)

* Rename STL names (string, list) to another such as str, lst

* Define the coding style for indent(1) and reform *.[ch] by it

* Refill license header with fill-column 79 in all files

* [uim] Rename uim-scm.c to uim-scm-sigscheme.c (after the merger)

==============================================================================
Assigned to Kazuki:

* Inhibit a mutation on string constants as described in "3.4 Storage model" of
  R5RS
  - Write both immutable and mutable case tests for all procedures that accepts
    a string

==============================================================================
Assigned to YamaKen:

* Write tests for SRFI-75

* Add integer->char and char->integer procedures with multibyte support
  - Write test

* GCC4-optimization-proof stack protection
  - Update the document

==============================================================================
