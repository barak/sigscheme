==============================================================================
Requirements and bugs:

* Introduce Exception handling (probably should be based on SRFI-34)
  - Throw an exception instead of exit(3) when an error occurred
  - Rename call/cc with call/ec? ([Anthy-dev 2216])
  - Implement assert-error in unittest.scm
  - [uim] Make uim-sh loop workable even if error occurred
  - [uim] Make the GaUnit-based testing framework workable

* 
  - Add tests for proper tail recursion with 'apply', 'call-with-values' and
    'receive' to test-tail-rec.scm

* 
  - Provide a string escaping procedure. If a SRFI or another de facto standard
    API for such purpose is existing, use it
  - [uim] Implement string-escape as same as trunk

* Fix invalid storage model assumption of ScmOp_append() and qquote_internal()
  with ScmRef

* [uim] link libsscm into libuim statically

* Dynamic encoding switching for a conversion between string and char list,
  based on a SRFI or de facto standard API

* Fix large fixed-size buffer on stack without limit checking in read.c

* grep "FIXME" and fix them

==============================================================================
Extensions:

==============================================================================
Performance improvements:

* Object representation compaction ([Anthy-dev 2353], [Anthy-dev 2360])

* Replace almost ScmObj initialization by SCM_NULL with SCM_FALSE. SCM_NULL is
  not appropriate for such clean initialization. #f is the counterpart of NULL
  of C. And using SCM_FALSE as the default value is the most efficient way in
  macine-code level since SCM_FALSE will be represented by zero after the
  compaction

==============================================================================
Logical simplifications:

* Reorganize SCM_SHIFT*() macros and simplify args extraction codes

* Move procedure registration for SRFI and SIOD operations in
  SigScm_Initialize_internal() to each operation-*.c and invoke them by
  SigScm_*_Initialize() from SigScm_Initialize_internal(). It should be done
  for logically appropriate file organization, and preparation for future
  dynamic-loadable modularization

==============================================================================
Namings and Cosmetic things:

* Rename "Macro Declarations" of all C files, c_template and h_template to
  "Macro Definitions" and move to immediately after of "Local Include" section
  since other declarations and definitions sometimes need macros

* Add a 'SCM' prefix to the global functions listed in sigschemeinternal.h

* Rename 'arg' for argument list to 'args'

* Rename STL names (string, list) to another such as str, lst

* Grand renaming (prefix reorganization, consideration about func_name and
  FuncName styles) ([Anthy-dev 2254], [Anthy-dev 2251])

* Define the coding style for indent(1) and reform *.[ch] by it

* Refill license header with fill-column 79, and insert it into all test files

* Rename datas.c to data.c or storage.c (YamaKen recommends storage.c)
  ([Anthy-dev 2251])

* [uim] Rename uim-scm.c to uim-scm-sigscheme.c

==============================================================================
Assigned to YamaKen:

* GCC4-optimization-proof stack protection
  - Update the document
  - Re-merge into datas.c

==============================================================================
