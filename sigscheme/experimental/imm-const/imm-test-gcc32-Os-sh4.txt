
imm-test.o:     file format coff-sh

SYMBOL TABLE:
[  0](sec -2)(fl 0x00)(ty   0)(scl 103) (nx 1) 0x00000000 imm-test.c
File 
[  2](sec  1)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .text
AUX scnlen 0xe0 nreloc 1 nlnno 0
[  4](sec  2)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x000000e0 .data
AUX scnlen 0x0 nreloc 0 nlnno 0
[  6](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x000000e0 .bss
AUX scnlen 0x0 nreloc 0 nlnno 0
[  8](sec  4)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x000000e0 .comment
AUX scnlen 0x20 nreloc 0 nlnno 0
[ 10](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000000 _falsep
[ 11](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000008 _ntc_falsep
[ 12](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x0000000e _nullp
[ 13](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000016 _ntc_nullp
[ 14](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x0000001e _consp
[ 15](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000026 _ntc_consp
[ 16](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000036 _memq
[ 17](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000050 _ntc_memq
[ 18](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000082 _and
[ 19](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x0000009e _ntc_and
[ 20](sec  0)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000004 _scm_ntc_true


Disassembly of section .text:

00000000 <_falsep>:
   0:	60 43       	mov	r4,r0
   2:	88 06       	cmp/eq	#6,r0
   4:	00 0b       	rts	
   6:	00 29       	movt	r0

00000008 <_ntc_falsep>:
   8:	24 48       	tst	r4,r4
   a:	00 0b       	rts	
   c:	00 29       	movt	r0

0000000e <_nullp>:
   e:	60 43       	mov	r4,r0
  10:	88 26       	cmp/eq	#38,r0
  12:	00 0b       	rts	
  14:	00 29       	movt	r0

00000016 <_ntc_nullp>:
  16:	60 43       	mov	r4,r0
  18:	88 02       	cmp/eq	#2,r0
  1a:	00 0b       	rts	
  1c:	00 29       	movt	r0

0000001e <_consp>:
  1e:	60 43       	mov	r4,r0
  20:	c8 06       	tst	#6,r0
  22:	00 0b       	rts	
  24:	00 29       	movt	r0

00000026 <_ntc_consp>:
  26:	60 43       	mov	r4,r0
  28:	c8 06       	tst	#6,r0
  2a:	01 29       	movt	r1
  2c:	e0 ff       	mov	#-1,r0
  2e:	24 48       	tst	r4,r4
  30:	60 0a       	negc	r0,r0
  32:	00 0b       	rts	
  34:	20 19       	and	r1,r0

00000036 <_memq>:
  36:	60 53       	mov	r5,r0
  38:	c8 06       	tst	#6,r0
  3a:	8b 06       	bf	4a <_memq+0x14>
  3c:	61 02       	mov.l	@r0,r1
  3e:	31 40       	cmp/eq	r4,r1
  40:	8d 04       	bt.s	4c <_memq+0x16>
  42:	61 03       	mov	r0,r1
  44:	50 01       	mov.l	@(4,r0),r0
  46:	c8 06       	tst	#6,r0
  48:	89 f8       	bt	3c <_memq+0x6>
  4a:	e1 06       	mov	#6,r1
  4c:	00 0b       	rts	
  4e:	60 13       	mov	r1,r0

00000050 <_ntc_memq>:
  50:	60 53       	mov	r5,r0
  52:	e1 ff       	mov	#-1,r1
  54:	c8 06       	tst	#6,r0
  56:	02 29       	movt	r2
  58:	25 58       	tst	r5,r5
  5a:	61 1a       	negc	r1,r1
  5c:	21 29       	and	r2,r1
  5e:	21 18       	tst	r1,r1
  60:	89 0c       	bt	7c <_ntc_memq+0x2c>
  62:	61 02       	mov.l	@r0,r1
  64:	31 40       	cmp/eq	r4,r1
  66:	8d 0a       	bt.s	7e <_ntc_memq+0x2e>
  68:	61 03       	mov	r0,r1
  6a:	50 01       	mov.l	@(4,r0),r0
  6c:	e1 ff       	mov	#-1,r1
  6e:	c8 06       	tst	#6,r0
  70:	02 29       	movt	r2
  72:	20 08       	tst	r0,r0
  74:	61 1a       	negc	r1,r1
  76:	21 29       	and	r2,r1
  78:	21 18       	tst	r1,r1
  7a:	8b f2       	bf	62 <_ntc_memq+0x12>
  7c:	e1 00       	mov	#0,r1
  7e:	00 0b       	rts	
  80:	60 13       	mov	r1,r0

00000082 <_and>:
  82:	60 43       	mov	r4,r0
  84:	c8 06       	tst	#6,r0
  86:	8f 06       	bf.s	96 <_and+0x14>
  88:	88 06       	cmp/eq	#6,r0
  8a:	8d 05       	bt.s	98 <_and+0x16>
  8c:	e1 06       	mov	#6,r1
  8e:	50 01       	mov.l	@(4,r0),r0
  90:	c8 06       	tst	#6,r0
  92:	8d fa       	bt.s	8a <_and+0x8>
  94:	88 06       	cmp/eq	#6,r0
  96:	91 01       	mov.w	9c <_and+0x1a>,r1	! 0xa6
  98:	00 0b       	rts	
  9a:	60 13       	mov	r1,r0
  9c:	00 a6       	mov.l	r10,@(r0,r0)

0000009e <_ntc_and>:
  9e:	60 43       	mov	r4,r0
  a0:	e1 ff       	mov	#-1,r1
  a2:	c8 06       	tst	#6,r0
  a4:	02 29       	movt	r2
  a6:	24 48       	tst	r4,r4
  a8:	61 1a       	negc	r1,r1
  aa:	21 29       	and	r2,r1
  ac:	21 18       	tst	r1,r1
  ae:	8d 0c       	bt.s	ca <_ntc_and+0x2c>
  b0:	20 08       	tst	r0,r0
  b2:	8d 0c       	bt.s	ce <_ntc_and+0x30>
  b4:	e1 00       	mov	#0,r1
  b6:	50 01       	mov.l	@(4,r0),r0
  b8:	e1 ff       	mov	#-1,r1
  ba:	c8 06       	tst	#6,r0
  bc:	02 29       	movt	r2
  be:	20 08       	tst	r0,r0
  c0:	61 1a       	negc	r1,r1
  c2:	21 29       	and	r2,r1
  c4:	21 18       	tst	r1,r1
  c6:	8f f4       	bf.s	b2 <_ntc_and+0x14>
  c8:	20 08       	tst	r0,r0
  ca:	d1 02       	mov.l	d4 <_ntc_and+0x36>,r1	! 0x0
  cc:	61 12       	mov.l	@r1,r1
  ce:	00 0b       	rts	
  d0:	60 13       	mov	r1,r0
  d2:	00 09       	nop	
  d4:	00 00       	.word 0x0000
  d6:	00 00       	.word 0x0000
  d8:	00 09       	nop	
  da:	00 09       	nop	
  dc:	00 09       	nop	
  de:	00 09       	nop	
