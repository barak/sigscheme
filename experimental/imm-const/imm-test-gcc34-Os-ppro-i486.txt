
imm-test.o:     file format elf32-i386-freebsd

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 imm-test.c
00000000 l    d  .text	00000000 
00000000 l    d  .data	00000000 
00000000 l    d  .bss	00000000 
00000000 l    d  .comment	00000000 
00000000 g     F .text	0000000b falsep
0000000b g     F .text	0000000b ntc_falsep
00000016 g     F .text	0000000b nullp
00000021 g     F .text	0000000b ntc_nullp
0000002c g     F .text	0000000b consp
00000037 g     F .text	00000017 ntc_consp
0000004e g     F .text	0000001b memq
00000069 g     F .text	0000001c ntc_memq
00000085 g     F .text	00000018 and
0000009d g     F .text	00000017 ntc_and
00000004       O *COM*	00000004 scm_ntc_true


Disassembly of section .text:

00000000 <falsep>:
   0:	31 c0                	xor    %eax,%eax
   2:	83 7c 24 04 06       	cmpl   $0x6,0x4(%esp)
   7:	0f 94 c0             	sete   %al
   a:	c3                   	ret    

0000000b <ntc_falsep>:
   b:	31 c0                	xor    %eax,%eax
   d:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
  12:	0f 94 c0             	sete   %al
  15:	c3                   	ret    

00000016 <nullp>:
  16:	31 c0                	xor    %eax,%eax
  18:	83 7c 24 04 26       	cmpl   $0x26,0x4(%esp)
  1d:	0f 94 c0             	sete   %al
  20:	c3                   	ret    

00000021 <ntc_nullp>:
  21:	31 c0                	xor    %eax,%eax
  23:	83 7c 24 04 02       	cmpl   $0x2,0x4(%esp)
  28:	0f 94 c0             	sete   %al
  2b:	c3                   	ret    

0000002c <consp>:
  2c:	31 c0                	xor    %eax,%eax
  2e:	f6 44 24 04 06       	testb  $0x6,0x4(%esp)
  33:	0f 94 c0             	sete   %al
  36:	c3                   	ret    

00000037 <ntc_consp>:
  37:	8b 44 24 04          	mov    0x4(%esp),%eax
  3b:	31 d2                	xor    %edx,%edx
  3d:	a8 06                	test   $0x6,%al
  3f:	75 0a                	jne    4b <ntc_consp+0x14>
  41:	85 c0                	test   %eax,%eax
  43:	b8 01 00 00 00       	mov    $0x1,%eax
  48:	0f 45 d0             	cmovne %eax,%edx
  4b:	89 d0                	mov    %edx,%eax
  4d:	c3                   	ret    

0000004e <memq>:
  4e:	8b 54 24 04          	mov    0x4(%esp),%edx
  52:	8b 44 24 08          	mov    0x8(%esp),%eax
  56:	a8 06                	test   $0x6,%al
  58:	75 09                	jne    63 <memq+0x15>
  5a:	39 10                	cmp    %edx,(%eax)
  5c:	74 0a                	je     68 <memq+0x1a>
  5e:	8b 40 04             	mov    0x4(%eax),%eax
  61:	eb f3                	jmp    56 <memq+0x8>
  63:	b8 06 00 00 00       	mov    $0x6,%eax
  68:	c3                   	ret    

00000069 <ntc_memq>:
  69:	8b 54 24 04          	mov    0x4(%esp),%edx
  6d:	8b 44 24 08          	mov    0x8(%esp),%eax
  71:	eb 0b                	jmp    7e <ntc_memq+0x15>
  73:	85 c0                	test   %eax,%eax
  75:	74 0b                	je     82 <ntc_memq+0x19>
  77:	39 10                	cmp    %edx,(%eax)
  79:	74 09                	je     84 <ntc_memq+0x1b>
  7b:	8b 40 04             	mov    0x4(%eax),%eax
  7e:	a8 06                	test   $0x6,%al
  80:	74 f1                	je     73 <ntc_memq+0xa>
  82:	31 c0                	xor    %eax,%eax
  84:	c3                   	ret    

00000085 <and>:
  85:	8b 44 24 04          	mov    0x4(%esp),%eax
  89:	a8 06                	test   $0x6,%al
  8b:	75 0a                	jne    97 <and+0x12>
  8d:	83 f8 06             	cmp    $0x6,%eax
  90:	74 0a                	je     9c <and+0x17>
  92:	8b 40 04             	mov    0x4(%eax),%eax
  95:	eb f2                	jmp    89 <and+0x4>
  97:	b8 a6 00 00 00       	mov    $0xa6,%eax
  9c:	c3                   	ret    

0000009d <ntc_and>:
  9d:	8b 44 24 04          	mov    0x4(%esp),%eax
  a1:	eb 07                	jmp    aa <ntc_and+0xd>
  a3:	85 c0                	test   %eax,%eax
  a5:	74 07                	je     ae <ntc_and+0x11>
  a7:	8b 40 04             	mov    0x4(%eax),%eax
  aa:	a8 06                	test   $0x6,%al
  ac:	74 f5                	je     a3 <ntc_and+0x6>
  ae:	a1 00 00 00 00       	mov    0x0,%eax
  b3:	c3                   	ret    
